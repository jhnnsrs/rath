"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3517],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},29414:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],l={sidebar_label:"operation",title:"operation"},p=void 0,s={unversionedId:"reference/operation",id:"reference/operation",title:"operation",description:"Context Objects",source:"@site/docs/reference/operation.md",sourceDirName:"reference",slug:"/reference/operation",permalink:"/rath/docs/reference/operation",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/operation.md",tags:[],version:"current",frontMatter:{sidebar_label:"operation",title:"operation"},sidebar:"tutorialSidebar",previous:{title:"errors",permalink:"/rath/docs/reference/errors"},next:{title:"rath",permalink:"/rath/docs/reference/rath"}},c=[{value:"Context Objects",id:"context-objects",children:[],level:2},{value:"Extensions Objects",id:"extensions-objects",children:[],level:2},{value:"Operation Objects",id:"operation-objects",children:[],level:2},{value:"GraphQLResult Objects",id:"graphqlresult-objects",children:[],level:2},{value:"GraphQLException Objects",id:"graphqlexception-objects",children:[{value:"opify",id:"opify",children:[],level:4}],level:2}],u={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"context-objects"},"Context Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Context(BaseModel)\n")),(0,o.kt)("p",null,"Context provides a way to pass arbitrary data to resolvers on the context"),(0,o.kt)("h2",{id:"extensions-objects"},"Extensions Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Extensions(BaseModel)\n")),(0,o.kt)("p",null,"Extensions is a map of additional metadata that can be used by the links in the chain"),(0,o.kt)("h2",{id:"operation-objects"},"Operation Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Operation(BaseModel)\n")),(0,o.kt)("p",null,"A GraphQL operation."),(0,o.kt)("p",null,"An Operation is a GraphQL operation that can be executed by a GraphQL client.\nIt is a combination of a query, variables, and headers, as well as a context\nthat can be used to pass additional information to the link chain and\nextensions that can be used to pass additional information to the server."),(0,o.kt)("h2",{id:"graphqlresult-objects"},"GraphQLResult Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class GraphQLResult(BaseModel)\n")),(0,o.kt)("p",null,"GraphQLResult is the result of a GraphQL operation."),(0,o.kt)("h2",{id:"graphqlexception-objects"},"GraphQLException Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class GraphQLException(Exception)\n")),(0,o.kt)("p",null,"GraphQLException is the base exception for all GraphQL errors."),(0,o.kt)("h4",{id:"opify"},"opify"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def opify(query: Union[str, DocumentNode],\n          variables: Dict[str, Any] = None,\n          headers: Dict[str, Any] = None,\n          operation_name: Optional[str] = None,\n          **kwargs) -> Operation\n")),(0,o.kt)("p",null,"Opify takes a query, variables, and headers and returns an Operation."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"query")," ",(0,o.kt)("em",{parentName:"li"},"Union","[str, DocumentNode]")," - The query string or the DocumentNode."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"variables")," ",(0,o.kt)("em",{parentName:"li"},"Dict","[str, Any]",", optional")," - The variables. Defaults to None."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"headers")," ",(0,o.kt)("em",{parentName:"li"},"Dict","[str, Any]",", optional")," - Additional headers. Defaults to None."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"operation_name")," ",(0,o.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - The operation_name to be exceuted. Defaults to None.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Operation")," - A GraphQL operation")))}d.isMDXComponent=!0}}]);