"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4541],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=c(n),m=o,k=f["".concat(s,".").concat(m)]||f[m]||p[m]||a;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2588:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return f}});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),l=["components"],i={sidebar_label:"statefulmock",title:"links.testing.statefulmock"},s=void 0,c={unversionedId:"reference/links/testing/statefulmock",id:"reference/links/testing/statefulmock",title:"links.testing.statefulmock",description:"target\\from\\node",source:"@site/docs/reference/links/testing/statefulmock.md",sourceDirName:"reference/links/testing",slug:"/reference/links/testing/statefulmock",permalink:"/rath/docs/reference/links/testing/statefulmock",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/links/testing/statefulmock.md",tags:[],version:"current",frontMatter:{sidebar_label:"statefulmock",title:"links.testing.statefulmock"},sidebar:"tutorialSidebar",previous:{title:"mock",permalink:"/rath/docs/reference/links/testing/mock"},next:{title:"helpers",permalink:"/rath/docs/reference/qt/helpers"}},u=[{value:"target_from_node",id:"target_from_node",children:[],level:4},{value:"ConfigurationError Objects",id:"configurationerror-objects",children:[],level:2},{value:"AsyncStatefulMockLink Objects",id:"asyncstatefulmocklink-objects",children:[{value:"resolving",id:"resolving",children:[],level:4}],level:2}],p={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"target_from_node"},"target","_","from","_","node"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def target_from_node(node: FieldNode) -> str\n")),(0,a.kt)("p",null,"Extract the target aka. the aliased name from a FieldNode."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"node")," ",(0,a.kt)("em",{parentName:"li"},"FieldNode")," - A GraphQL FieldNode.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"str")," - The target")),(0,a.kt)("h2",{id:"configurationerror-objects"},"ConfigurationError Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class ConfigurationError(TerminatingLinkError)\n")),(0,a.kt)("p",null,"A Configuration Error"),(0,a.kt)("h2",{id:"asyncstatefulmocklink-objects"},"AsyncStatefulMockLink Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class AsyncStatefulMockLink(AsyncTerminatingLink)\n")),(0,a.kt)("p",null,"A Stateful Mocklink"),(0,a.kt)("p",null,"This is a mocklink that can be used to mock a GraphQL server.\nYou need to pass resolvers to the constructor."),(0,a.kt)("p",null,"In addition to AsyncMockLink this class also supports Subscription,\nand has internal state that needs to be handled."),(0,a.kt)("h4",{id:"resolving"},"resolving"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"async def resolving()\n")),(0,a.kt)("p",null,"A coroutine that resolves the incoming operations in\nan inifite Loop"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Raises"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"NotImplementedError")," - If the operation is not supported (aka not implemented)")))}f.isMDXComponent=!0}}]);